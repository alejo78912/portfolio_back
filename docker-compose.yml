version: '3.8'

services:
  spring-app:
    build: 
      context: portfolio_back
      dockerfile: Dockerfile
    ports:
      - "8000:8000" # HTTPS utiliza el puerto 8443
    depends_on:
      - mysql-db
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql-db:3306/${MYSQL_DATABASE}
      SPRING_DATASOURCE_USERNAME: ${SPRING_DATASOURCE_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
      SPRING_MAIL_USERNAME: ${SMTP_EMAIL}
      SPRING_MAIL_PASSWORD: ${SMTP_PASSWORD}
      SSL_KEYSTORE_PASSWORD: ${SSL_KEYSTORE_PASSWORD}
    volumes:
      - ./keystore.p12:/app/keystore.p12 # Asegura que el keystore est√© disponible en el contenedor
    networks:
      - conexion_from_spring

  mysql-db:
    build: 
      context: ./MySQL
      dockerfile: Dockerfile
    container_name: database
    ports:
      - "3306:3306"
    env_file:
      - .env
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${SPRING_DATASOURCE_USERNAME}
      MYSQL_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
    volumes:
      - ./MySQL/volumes:/var/lib/mysql
    hostname: mysql-db
    networks:
      - conexion_from_spring
    healthcheck:
      test: ["CMD", "mysql", "-u", "root", "-p${MYSQL_ROOT_PASSWORD}", "-e", "SELECT 1;"]
      interval: 30s
      timeout: 10s
      retries: 5

  adminer:
    image: adminer
    container_name: adminer_spring
    restart: always
    ports:
      - "8080:8080"
    networks:
      - conexion_from_spring

networks:
  conexion_from_spring:
    driver: bridge

volumes:
  mysql-data:
    driver: local