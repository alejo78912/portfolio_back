name: Deploy

on:
  push:
    branches: [main]

jobs:
  Deploy:
    name: Deploy to EC2
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Setup SSH Key
      env:
        PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      run: |
        echo "$PRIVATE_KEY" > private_key.pem
        chmod 400 private_key.pem

    - name: Deploy to EC2
      env:
        HOST_NAME: ${{ secrets.SSH_HOST }}
        USER_NAME: ${{ secrets.USER_NAME }}
        SPRING_DATASOURCE_URL: ${{ Variables.SPRING_DATASOURCE_URL }}
        SPRING_DATASOURCE_USERNAME: ${{ Variables.SPRING_DATASOURCE_USERNAME }}
        SPRING_DATASOURCE_PASSWORD: ${{ Variables.SPRING_DATASOURCE_PASSWORD }}
        MYSQL_ROOT_PASSWORD: ${{ Variables.MYSQL_ROOT_PASSWORD }}
        MYSQL_DATABASE: ${{ Variables.MYSQL_DATABASE }}
        API_TOKEN: ${{ Variables.API_TOKEN }}
        SMTP_EMAIL: ${{ Variables.SMTP_EMAIL }}
        SMTP_PASSWORD: ${{ Variables.SMTP_PASSWORD }}
      run: |
        echo "Conectando al servidor EC2..."
        ssh -o StrictHostKeyChecking=no -i private_key.pem ${USER_NAME}@${HOST_NAME} << 'EOF'
        
        PROJECT_DIR="/home/ubuntu/portfolio"
        REPO_URL="https://github.com/alejo78912/portfolio_back.git"

        echo "Verificando si el repositorio existe..."
        if [ ! -d "$PROJECT_DIR/.git" ]; then
            echo "Clonando el repositorio..."
            git clone $REPO_URL $PROJECT_DIR
        else
            echo "Actualizando el repositorio..."
            cd $PROJECT_DIR
            git fetch --all
            git reset --hard origin/main
        fi

        cd $PROJECT_DIR
        echo "Deteniendo contenedores existentes..."
        docker-compose down --volumes

        echo "Creando el archivo .env con las variables de entorno..."

        # Crear archivo .env con las variables de entorno
        echo "SPRING_DATASOURCE_URL=${SPRING_DATASOURCE_URL}" > .env
        echo "SPRING_DATASOURCE_USERNAME=${SPRING_DATASOURCE_USERNAME}" >> .env
        echo "SPRING_DATASOURCE_PASSWORD=${SPRING_DATASOURCE_PASSWORD}" >> .env
        echo "MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}" >> .env
        echo "MYSQL_DATABASE=${MYSQL_DATABASE}" >> .env
        echo "API_TOKEN=${API_TOKEN}" >> .env
        echo "SMTP_EMAIL=${SMTP_EMAIL}" >> .env
        echo "SMTP_PASSWORD=${SMTP_PASSWORD}" >> .env

        # Verificar contenido del archivo .env
        echo "Contenido del archivo .env:"
        cat .env

        echo "Construyendo y levantando los contenedores..."
        
        # Construir y levantar contenedores
        docker-compose build --no-cache
        docker-compose up -d

        echo "Estado de los contenedores:"
        docker-compose ps

        echo "Despliegue completado exitosamente."
        EOF

    - name: Cleanup
      run: rm -f private_key.pem